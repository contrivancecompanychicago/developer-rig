// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ExtensionFrame /> when in config mode renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionFrame
    bindIframeToParent={[Function]}
    extension={
        Object {
            "anchor": "panel",
            "authorName": "test",
            "bitsEnabled": false,
            "canInstall": true,
            "channelId": "channelId",
            "description": "description",
            "eulaTosUrl": "test.biz",
            "iconUrl": "iconUrl",
            "iconUrls": Object {},
            "id": "id",
            "installationCount": 0,
            "name": "name",
            "panelHeight": 300,
            "privacyPolicyUrl": "test.com",
            "requestIdentityLink": false,
            "requiredBroadcasterAbilities": Array [
              "test",
            ],
            "screenshotUrls": Array [
              "test.png",
            ],
            "sku": "sku",
            "state": "Testing",
            "summary": "summary",
            "supportEmail": "test",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "size": 0,
                "viewerUrl": "test",
                "zoom": false,
                "zoomPixels": 1024,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "mobile": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "height": 300,
                "viewerUrl": "test",
              },
              "videoOverlay": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameId="0"
    iframe=""
    mode="config"
    type="config"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "rig-frame extension-frame",
      "frameBorder": 0,
      "src": "/extension-frame.html",
      "title": "0",
    },
    "ref": [Function],
    "rendered": null,
    "type": "iframe",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "rig-frame extension-frame",
        "frameBorder": 0,
        "src": "/extension-frame.html",
        "title": "0",
      },
      "ref": [Function],
      "rendered": null,
      "type": "iframe",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionFrame /> when in live config mode renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionFrame
    bindIframeToParent={[Function]}
    extension={
        Object {
            "anchor": "panel",
            "authorName": "test",
            "bitsEnabled": false,
            "canInstall": true,
            "channelId": "channelId",
            "description": "description",
            "eulaTosUrl": "test.biz",
            "iconUrl": "iconUrl",
            "iconUrls": Object {},
            "id": "id",
            "installationCount": 0,
            "name": "name",
            "panelHeight": 300,
            "privacyPolicyUrl": "test.com",
            "requestIdentityLink": false,
            "requiredBroadcasterAbilities": Array [
              "test",
            ],
            "screenshotUrls": Array [
              "test.png",
            ],
            "sku": "sku",
            "state": "Testing",
            "summary": "summary",
            "supportEmail": "test",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "size": 0,
                "viewerUrl": "test",
                "zoom": false,
                "zoomPixels": 1024,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "mobile": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "height": 300,
                "viewerUrl": "test",
              },
              "videoOverlay": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameId="0"
    iframe=""
    mode="dashboard"
    type="liveConfig"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "rig-frame extension-frame",
      "frameBorder": 0,
      "src": "/extension-frame.html",
      "title": "0",
    },
    "ref": [Function],
    "rendered": null,
    "type": "iframe",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "rig-frame extension-frame",
        "frameBorder": 0,
        "src": "/extension-frame.html",
        "title": "0",
      },
      "ref": [Function],
      "rendered": null,
      "type": "iframe",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionFrame /> when in live config mode renders correctly 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionFrame
    bindIframeToParent={[Function]}
    extension={
        Object {
            "anchor": "panel",
            "authorName": "test",
            "bitsEnabled": false,
            "canInstall": true,
            "channelId": "channelId",
            "description": "description",
            "eulaTosUrl": "test.biz",
            "iconUrl": "iconUrl",
            "iconUrls": Object {},
            "id": "id",
            "installationCount": 0,
            "name": "name",
            "panelHeight": 300,
            "privacyPolicyUrl": "test.com",
            "requestIdentityLink": false,
            "requiredBroadcasterAbilities": Array [
              "test",
            ],
            "screenshotUrls": Array [
              "test.png",
            ],
            "sku": "sku",
            "state": "Testing",
            "summary": "summary",
            "supportEmail": "test",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "size": 0,
                "viewerUrl": "test",
                "zoom": false,
                "zoomPixels": 1024,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "mobile": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "height": 300,
                "viewerUrl": "test",
              },
              "videoOverlay": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameId="0"
    iframe=""
    mode="dashboard"
    type="liveConfig"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "rig-frame extension-frame",
      "frameBorder": 0,
      "src": "/extension-frame.html",
      "title": "0",
    },
    "ref": [Function],
    "rendered": null,
    "type": "iframe",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "rig-frame extension-frame",
        "frameBorder": 0,
        "src": "/extension-frame.html",
        "title": "0",
      },
      "ref": [Function],
      "rendered": null,
      "type": "iframe",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionFrame /> when in panel mode renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionFrame
    bindIframeToParent={[Function]}
    extension={
        Object {
            "anchor": "panel",
            "authorName": "test",
            "bitsEnabled": false,
            "canInstall": true,
            "channelId": "channelId",
            "description": "description",
            "eulaTosUrl": "test.biz",
            "iconUrl": "iconUrl",
            "iconUrls": Object {},
            "id": "id",
            "installationCount": 0,
            "name": "name",
            "panelHeight": 300,
            "privacyPolicyUrl": "test.com",
            "requestIdentityLink": false,
            "requiredBroadcasterAbilities": Array [
              "test",
            ],
            "screenshotUrls": Array [
              "test.png",
            ],
            "sku": "sku",
            "state": "Testing",
            "summary": "summary",
            "supportEmail": "test",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "size": 0,
                "viewerUrl": "test",
                "zoom": false,
                "zoomPixels": 1024,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "mobile": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "height": 300,
                "viewerUrl": "test",
              },
              "videoOverlay": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameId="0"
    iframe=""
    mode="viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "rig-frame extension-frame",
      "frameBorder": 0,
      "src": "/extension-frame.html",
      "title": "0",
    },
    "ref": [Function],
    "rendered": null,
    "type": "iframe",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "rig-frame extension-frame",
        "frameBorder": 0,
        "src": "/extension-frame.html",
        "title": "0",
      },
      "ref": [Function],
      "rendered": null,
      "type": "iframe",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionFrame /> when in video overlay mode renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionFrame
    bindIframeToParent={[Function]}
    extension={
        Object {
            "anchor": "panel",
            "authorName": "test",
            "bitsEnabled": false,
            "canInstall": true,
            "channelId": "channelId",
            "description": "description",
            "eulaTosUrl": "test.biz",
            "iconUrl": "iconUrl",
            "iconUrls": Object {},
            "id": "id",
            "installationCount": 0,
            "name": "name",
            "panelHeight": 300,
            "privacyPolicyUrl": "test.com",
            "requestIdentityLink": false,
            "requiredBroadcasterAbilities": Array [
              "test",
            ],
            "screenshotUrls": Array [
              "test.png",
            ],
            "sku": "sku",
            "state": "Testing",
            "summary": "summary",
            "supportEmail": "test",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "size": 0,
                "viewerUrl": "test",
                "zoom": false,
                "zoomPixels": 1024,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "mobile": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "height": 300,
                "viewerUrl": "test",
              },
              "videoOverlay": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameId="0"
    iframe=""
    mode="viewer"
    type="videoOverlay"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "rig-frame extension-frame",
      "frameBorder": 0,
      "src": "/extension-frame.html",
      "title": "0",
    },
    "ref": [Function],
    "rendered": null,
    "type": "iframe",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "rig-frame extension-frame",
        "frameBorder": 0,
        "src": "/extension-frame.html",
        "title": "0",
      },
      "ref": [Function],
      "rendered": null,
      "type": "iframe",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionFrame /> when in video overlay mode renders correctly 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionFrame
    bindIframeToParent={[Function]}
    extension={
        Object {
            "anchor": "panel",
            "authorName": "test",
            "bitsEnabled": false,
            "canInstall": true,
            "channelId": "channelId",
            "description": "description",
            "eulaTosUrl": "test.biz",
            "iconUrl": "iconUrl",
            "iconUrls": Object {},
            "id": "id",
            "installationCount": 0,
            "name": "name",
            "panelHeight": 300,
            "privacyPolicyUrl": "test.com",
            "requestIdentityLink": false,
            "requiredBroadcasterAbilities": Array [
              "test",
            ],
            "screenshotUrls": Array [
              "test.png",
            ],
            "sku": "sku",
            "state": "Testing",
            "summary": "summary",
            "supportEmail": "test",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "size": 0,
                "viewerUrl": "test",
                "zoom": false,
                "zoomPixels": 1024,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "mobile": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "height": 300,
                "viewerUrl": "test",
              },
              "videoOverlay": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameId="0"
    iframe=""
    mode="viewer"
    type="videoOverlay"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "rig-frame extension-frame",
      "frameBorder": 0,
      "src": "/extension-frame.html",
      "title": "0",
    },
    "ref": [Function],
    "rendered": null,
    "type": "iframe",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "rig-frame extension-frame",
        "frameBorder": 0,
        "src": "/extension-frame.html",
        "title": "0",
      },
      "ref": [Function],
      "rendered": null,
      "type": "iframe",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
